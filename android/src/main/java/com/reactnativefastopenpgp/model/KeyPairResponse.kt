// automatically generated by the FlatBuffers compiler, do not modify

package com.reactnativefastopenpgp.model

import java.nio.*
import kotlin.math.sign
import com.google.flatbuffers.*

@Suppress("unused")
@ExperimentalUnsignedTypes
class KeyPairResponse : Table() {

    fun __init(_i: Int, _bb: ByteBuffer)  {
        __reset(_i, _bb)
    }
    fun __assign(_i: Int, _bb: ByteBuffer) : KeyPairResponse {
        __init(_i, _bb)
        return this
    }
    val output : KeyPair? get() = output(KeyPair())
    fun output(obj: KeyPair) : KeyPair? {
        val o = __offset(4)
        return if (o != 0) {
            obj.__assign(__indirect(o + bb_pos), bb)
        } else {
            null
        }
    }
    val error : String?
        get() {
            val o = __offset(6)
            return if (o != 0) __string(o + bb_pos) else null
        }
    val errorAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(6, 1)
    fun errorInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 6, 1)
    companion object {
        fun validateVersion() = Constants.FLATBUFFERS_1_12_0()
        fun getRootAsKeyPairResponse(_bb: ByteBuffer): KeyPairResponse = getRootAsKeyPairResponse(_bb, KeyPairResponse())
        fun getRootAsKeyPairResponse(_bb: ByteBuffer, obj: KeyPairResponse): KeyPairResponse {
            _bb.order(ByteOrder.LITTLE_ENDIAN)
            return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb))
        }
        fun createKeyPairResponse(builder: FlatBufferBuilder, outputOffset: Int, errorOffset: Int) : Int {
            builder.startTable(2)
            addError(builder, errorOffset)
            addOutput(builder, outputOffset)
            return endKeyPairResponse(builder)
        }
        fun startKeyPairResponse(builder: FlatBufferBuilder) = builder.startTable(2)
        fun addOutput(builder: FlatBufferBuilder, output: Int) = builder.addOffset(0, output, 0)
        fun addError(builder: FlatBufferBuilder, error: Int) = builder.addOffset(1, error, 0)
        fun endKeyPairResponse(builder: FlatBufferBuilder) : Int {
            val o = builder.endTable()
            return o
        }
    }
}
