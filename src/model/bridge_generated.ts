// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from '../flatbuffers/flatbuffers';
/**
 * @enum {number}
 */
export namespace model {
  export enum Hash {
    SHA256 = 0,
    SHA224 = 1,
    SHA384 = 2,
    SHA512 = 3,
  }
}

/**
 * @enum {number}
 */
export namespace model {
  export enum Compression {
    NONE = 0,
    ZLIB = 1,
    ZIP = 2,
  }
}

/**
 * @enum {number}
 */
export namespace model {
  export enum Cipher {
    AES128 = 0,
    AES192 = 1,
    AES256 = 2,
  }
}

/**
 * @constructor
 */
export namespace model {
  export class EncryptRequest {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns EncryptRequest
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): EncryptRequest {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    }

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param EncryptRequest= obj
     * @returns EncryptRequest
     */
    static getRootAsEncryptRequest(
      bb: flatbuffers.ByteBuffer,
      obj?: EncryptRequest
    ): EncryptRequest {
      return (obj || new EncryptRequest()).__init(
        bb.readInt32(bb.position()) + bb.position(),
        bb
      );
    }

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param EncryptRequest= obj
     * @returns EncryptRequest
     */
    static getSizePrefixedRootAsEncryptRequest(
      bb: flatbuffers.ByteBuffer,
      obj?: EncryptRequest
    ): EncryptRequest {
      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
      return (obj || new EncryptRequest()).__init(
        bb.readInt32(bb.position()) + bb.position(),
        bb
      );
    }

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    message(): string | null;
    message(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
    message(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset
        ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
        : null;
    }

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    publicKey(): string | null;
    publicKey(
      optionalEncoding: flatbuffers.Encoding
    ): string | Uint8Array | null;
    publicKey(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 6);
      return offset
        ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
        : null;
    }

    /**
     * @param model.KeyOptions= obj
     * @returns model.KeyOptions|null
     */
    options(obj?: model.KeyOptions): model.KeyOptions | null {
      var offset = this.bb!.__offset(this.bb_pos, 8);
      return offset
        ? (obj || new model.KeyOptions()).__init(
            this.bb!.__indirect(this.bb_pos + offset),
            this.bb!
          )
        : null;
    }

    /**
     * @param model.Entity= obj
     * @returns model.Entity|null
     */
    signed(obj?: model.Entity): model.Entity | null {
      var offset = this.bb!.__offset(this.bb_pos, 10);
      return offset
        ? (obj || new model.Entity()).__init(
            this.bb!.__indirect(this.bb_pos + offset),
            this.bb!
          )
        : null;
    }

    /**
     * @param model.FileHints= obj
     * @returns model.FileHints|null
     */
    fileHints(obj?: model.FileHints): model.FileHints | null {
      var offset = this.bb!.__offset(this.bb_pos, 12);
      return offset
        ? (obj || new model.FileHints()).__init(
            this.bb!.__indirect(this.bb_pos + offset),
            this.bb!
          )
        : null;
    }

    /**
     * @param flatbuffers.Builder builder
     */
    static startEncryptRequest(builder: flatbuffers.Builder) {
      builder.startObject(5);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset messageOffset
     */
    static addMessage(
      builder: flatbuffers.Builder,
      messageOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(0, messageOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset publicKeyOffset
     */
    static addPublicKey(
      builder: flatbuffers.Builder,
      publicKeyOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(1, publicKeyOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset optionsOffset
     */
    static addOptions(
      builder: flatbuffers.Builder,
      optionsOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(2, optionsOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset signedOffset
     */
    static addSigned(
      builder: flatbuffers.Builder,
      signedOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(3, signedOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset fileHintsOffset
     */
    static addFileHints(
      builder: flatbuffers.Builder,
      fileHintsOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(4, fileHintsOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endEncryptRequest(builder: flatbuffers.Builder): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    }

    static createEncryptRequest(
      builder: flatbuffers.Builder,
      messageOffset: flatbuffers.Offset,
      publicKeyOffset: flatbuffers.Offset,
      optionsOffset: flatbuffers.Offset,
      signedOffset: flatbuffers.Offset,
      fileHintsOffset: flatbuffers.Offset
    ): flatbuffers.Offset {
      EncryptRequest.startEncryptRequest(builder);
      EncryptRequest.addMessage(builder, messageOffset);
      EncryptRequest.addPublicKey(builder, publicKeyOffset);
      EncryptRequest.addOptions(builder, optionsOffset);
      EncryptRequest.addSigned(builder, signedOffset);
      EncryptRequest.addFileHints(builder, fileHintsOffset);
      return EncryptRequest.endEncryptRequest(builder);
    }
  }
}
/**
 * @constructor
 */
export namespace model {
  export class EncryptBytesRequest {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns EncryptBytesRequest
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): EncryptBytesRequest {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    }

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param EncryptBytesRequest= obj
     * @returns EncryptBytesRequest
     */
    static getRootAsEncryptBytesRequest(
      bb: flatbuffers.ByteBuffer,
      obj?: EncryptBytesRequest
    ): EncryptBytesRequest {
      return (obj || new EncryptBytesRequest()).__init(
        bb.readInt32(bb.position()) + bb.position(),
        bb
      );
    }

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param EncryptBytesRequest= obj
     * @returns EncryptBytesRequest
     */
    static getSizePrefixedRootAsEncryptBytesRequest(
      bb: flatbuffers.ByteBuffer,
      obj?: EncryptBytesRequest
    ): EncryptBytesRequest {
      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
      return (obj || new EncryptBytesRequest()).__init(
        bb.readInt32(bb.position()) + bb.position(),
        bb
      );
    }

    /**
     * @param number index
     * @returns number
     */
    message(index: number): number | null {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset
        ? this.bb!.readUint8(this.bb!.__vector(this.bb_pos + offset) + index)
        : 0;
    }

    /**
     * @returns number
     */
    messageLength(): number {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
    }

    /**
     * @returns Uint8Array
     */
    messageArray(): Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset
        ? new Uint8Array(
            this.bb!.bytes().buffer,
            this.bb!.bytes().byteOffset +
              this.bb!.__vector(this.bb_pos + offset),
            this.bb!.__vector_len(this.bb_pos + offset)
          )
        : null;
    }

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    publicKey(): string | null;
    publicKey(
      optionalEncoding: flatbuffers.Encoding
    ): string | Uint8Array | null;
    publicKey(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 6);
      return offset
        ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
        : null;
    }

    /**
     * @param model.KeyOptions= obj
     * @returns model.KeyOptions|null
     */
    options(obj?: model.KeyOptions): model.KeyOptions | null {
      var offset = this.bb!.__offset(this.bb_pos, 8);
      return offset
        ? (obj || new model.KeyOptions()).__init(
            this.bb!.__indirect(this.bb_pos + offset),
            this.bb!
          )
        : null;
    }

    /**
     * @param model.Entity= obj
     * @returns model.Entity|null
     */
    signed(obj?: model.Entity): model.Entity | null {
      var offset = this.bb!.__offset(this.bb_pos, 10);
      return offset
        ? (obj || new model.Entity()).__init(
            this.bb!.__indirect(this.bb_pos + offset),
            this.bb!
          )
        : null;
    }

    /**
     * @param model.FileHints= obj
     * @returns model.FileHints|null
     */
    fileHints(obj?: model.FileHints): model.FileHints | null {
      var offset = this.bb!.__offset(this.bb_pos, 12);
      return offset
        ? (obj || new model.FileHints()).__init(
            this.bb!.__indirect(this.bb_pos + offset),
            this.bb!
          )
        : null;
    }

    /**
     * @param flatbuffers.Builder builder
     */
    static startEncryptBytesRequest(builder: flatbuffers.Builder) {
      builder.startObject(5);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset messageOffset
     */
    static addMessage(
      builder: flatbuffers.Builder,
      messageOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(0, messageOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param Array.<number> data
     * @returns flatbuffers.Offset
     */
    static createMessageVector(
      builder: flatbuffers.Builder,
      data: number[] | Uint8Array
    ): flatbuffers.Offset {
      builder.startVector(1, data.length, 1);
      for (var i = data.length - 1; i >= 0; i--) {
        builder.addInt8(data[i]);
      }
      return builder.endVector();
    }

    /**
     * @param flatbuffers.Builder builder
     * @param number numElems
     */
    static startMessageVector(builder: flatbuffers.Builder, numElems: number) {
      builder.startVector(1, numElems, 1);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset publicKeyOffset
     */
    static addPublicKey(
      builder: flatbuffers.Builder,
      publicKeyOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(1, publicKeyOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset optionsOffset
     */
    static addOptions(
      builder: flatbuffers.Builder,
      optionsOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(2, optionsOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset signedOffset
     */
    static addSigned(
      builder: flatbuffers.Builder,
      signedOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(3, signedOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset fileHintsOffset
     */
    static addFileHints(
      builder: flatbuffers.Builder,
      fileHintsOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(4, fileHintsOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endEncryptBytesRequest(
      builder: flatbuffers.Builder
    ): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    }

    static createEncryptBytesRequest(
      builder: flatbuffers.Builder,
      messageOffset: flatbuffers.Offset,
      publicKeyOffset: flatbuffers.Offset,
      optionsOffset: flatbuffers.Offset,
      signedOffset: flatbuffers.Offset,
      fileHintsOffset: flatbuffers.Offset
    ): flatbuffers.Offset {
      EncryptBytesRequest.startEncryptBytesRequest(builder);
      EncryptBytesRequest.addMessage(builder, messageOffset);
      EncryptBytesRequest.addPublicKey(builder, publicKeyOffset);
      EncryptBytesRequest.addOptions(builder, optionsOffset);
      EncryptBytesRequest.addSigned(builder, signedOffset);
      EncryptBytesRequest.addFileHints(builder, fileHintsOffset);
      return EncryptBytesRequest.endEncryptBytesRequest(builder);
    }
  }
}
/**
 * @constructor
 */
export namespace model {
  export class DecryptRequest {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns DecryptRequest
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): DecryptRequest {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    }

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param DecryptRequest= obj
     * @returns DecryptRequest
     */
    static getRootAsDecryptRequest(
      bb: flatbuffers.ByteBuffer,
      obj?: DecryptRequest
    ): DecryptRequest {
      return (obj || new DecryptRequest()).__init(
        bb.readInt32(bb.position()) + bb.position(),
        bb
      );
    }

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param DecryptRequest= obj
     * @returns DecryptRequest
     */
    static getSizePrefixedRootAsDecryptRequest(
      bb: flatbuffers.ByteBuffer,
      obj?: DecryptRequest
    ): DecryptRequest {
      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
      return (obj || new DecryptRequest()).__init(
        bb.readInt32(bb.position()) + bb.position(),
        bb
      );
    }

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    message(): string | null;
    message(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
    message(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset
        ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
        : null;
    }

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    privateKey(): string | null;
    privateKey(
      optionalEncoding: flatbuffers.Encoding
    ): string | Uint8Array | null;
    privateKey(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 6);
      return offset
        ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
        : null;
    }

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    passphrase(): string | null;
    passphrase(
      optionalEncoding: flatbuffers.Encoding
    ): string | Uint8Array | null;
    passphrase(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 8);
      return offset
        ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
        : null;
    }

    /**
     * @param model.KeyOptions= obj
     * @returns model.KeyOptions|null
     */
    options(obj?: model.KeyOptions): model.KeyOptions | null {
      var offset = this.bb!.__offset(this.bb_pos, 10);
      return offset
        ? (obj || new model.KeyOptions()).__init(
            this.bb!.__indirect(this.bb_pos + offset),
            this.bb!
          )
        : null;
    }

    /**
     * @param flatbuffers.Builder builder
     */
    static startDecryptRequest(builder: flatbuffers.Builder) {
      builder.startObject(4);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset messageOffset
     */
    static addMessage(
      builder: flatbuffers.Builder,
      messageOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(0, messageOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset privateKeyOffset
     */
    static addPrivateKey(
      builder: flatbuffers.Builder,
      privateKeyOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(1, privateKeyOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset passphraseOffset
     */
    static addPassphrase(
      builder: flatbuffers.Builder,
      passphraseOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(2, passphraseOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset optionsOffset
     */
    static addOptions(
      builder: flatbuffers.Builder,
      optionsOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(3, optionsOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endDecryptRequest(builder: flatbuffers.Builder): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    }

    static createDecryptRequest(
      builder: flatbuffers.Builder,
      messageOffset: flatbuffers.Offset,
      privateKeyOffset: flatbuffers.Offset,
      passphraseOffset: flatbuffers.Offset,
      optionsOffset: flatbuffers.Offset
    ): flatbuffers.Offset {
      DecryptRequest.startDecryptRequest(builder);
      DecryptRequest.addMessage(builder, messageOffset);
      DecryptRequest.addPrivateKey(builder, privateKeyOffset);
      DecryptRequest.addPassphrase(builder, passphraseOffset);
      DecryptRequest.addOptions(builder, optionsOffset);
      return DecryptRequest.endDecryptRequest(builder);
    }
  }
}
/**
 * @constructor
 */
export namespace model {
  export class DecryptBytesRequest {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns DecryptBytesRequest
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): DecryptBytesRequest {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    }

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param DecryptBytesRequest= obj
     * @returns DecryptBytesRequest
     */
    static getRootAsDecryptBytesRequest(
      bb: flatbuffers.ByteBuffer,
      obj?: DecryptBytesRequest
    ): DecryptBytesRequest {
      return (obj || new DecryptBytesRequest()).__init(
        bb.readInt32(bb.position()) + bb.position(),
        bb
      );
    }

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param DecryptBytesRequest= obj
     * @returns DecryptBytesRequest
     */
    static getSizePrefixedRootAsDecryptBytesRequest(
      bb: flatbuffers.ByteBuffer,
      obj?: DecryptBytesRequest
    ): DecryptBytesRequest {
      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
      return (obj || new DecryptBytesRequest()).__init(
        bb.readInt32(bb.position()) + bb.position(),
        bb
      );
    }

    /**
     * @param number index
     * @returns number
     */
    message(index: number): number | null {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset
        ? this.bb!.readUint8(this.bb!.__vector(this.bb_pos + offset) + index)
        : 0;
    }

    /**
     * @returns number
     */
    messageLength(): number {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
    }

    /**
     * @returns Uint8Array
     */
    messageArray(): Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset
        ? new Uint8Array(
            this.bb!.bytes().buffer,
            this.bb!.bytes().byteOffset +
              this.bb!.__vector(this.bb_pos + offset),
            this.bb!.__vector_len(this.bb_pos + offset)
          )
        : null;
    }

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    privateKey(): string | null;
    privateKey(
      optionalEncoding: flatbuffers.Encoding
    ): string | Uint8Array | null;
    privateKey(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 6);
      return offset
        ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
        : null;
    }

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    passphrase(): string | null;
    passphrase(
      optionalEncoding: flatbuffers.Encoding
    ): string | Uint8Array | null;
    passphrase(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 8);
      return offset
        ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
        : null;
    }

    /**
     * @param model.KeyOptions= obj
     * @returns model.KeyOptions|null
     */
    options(obj?: model.KeyOptions): model.KeyOptions | null {
      var offset = this.bb!.__offset(this.bb_pos, 10);
      return offset
        ? (obj || new model.KeyOptions()).__init(
            this.bb!.__indirect(this.bb_pos + offset),
            this.bb!
          )
        : null;
    }

    /**
     * @param flatbuffers.Builder builder
     */
    static startDecryptBytesRequest(builder: flatbuffers.Builder) {
      builder.startObject(4);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset messageOffset
     */
    static addMessage(
      builder: flatbuffers.Builder,
      messageOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(0, messageOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param Array.<number> data
     * @returns flatbuffers.Offset
     */
    static createMessageVector(
      builder: flatbuffers.Builder,
      data: number[] | Uint8Array
    ): flatbuffers.Offset {
      builder.startVector(1, data.length, 1);
      for (var i = data.length - 1; i >= 0; i--) {
        builder.addInt8(data[i]);
      }
      return builder.endVector();
    }

    /**
     * @param flatbuffers.Builder builder
     * @param number numElems
     */
    static startMessageVector(builder: flatbuffers.Builder, numElems: number) {
      builder.startVector(1, numElems, 1);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset privateKeyOffset
     */
    static addPrivateKey(
      builder: flatbuffers.Builder,
      privateKeyOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(1, privateKeyOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset passphraseOffset
     */
    static addPassphrase(
      builder: flatbuffers.Builder,
      passphraseOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(2, passphraseOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset optionsOffset
     */
    static addOptions(
      builder: flatbuffers.Builder,
      optionsOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(3, optionsOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endDecryptBytesRequest(
      builder: flatbuffers.Builder
    ): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    }

    static createDecryptBytesRequest(
      builder: flatbuffers.Builder,
      messageOffset: flatbuffers.Offset,
      privateKeyOffset: flatbuffers.Offset,
      passphraseOffset: flatbuffers.Offset,
      optionsOffset: flatbuffers.Offset
    ): flatbuffers.Offset {
      DecryptBytesRequest.startDecryptBytesRequest(builder);
      DecryptBytesRequest.addMessage(builder, messageOffset);
      DecryptBytesRequest.addPrivateKey(builder, privateKeyOffset);
      DecryptBytesRequest.addPassphrase(builder, passphraseOffset);
      DecryptBytesRequest.addOptions(builder, optionsOffset);
      return DecryptBytesRequest.endDecryptBytesRequest(builder);
    }
  }
}
/**
 * @constructor
 */
export namespace model {
  export class SignRequest {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns SignRequest
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): SignRequest {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    }

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param SignRequest= obj
     * @returns SignRequest
     */
    static getRootAsSignRequest(
      bb: flatbuffers.ByteBuffer,
      obj?: SignRequest
    ): SignRequest {
      return (obj || new SignRequest()).__init(
        bb.readInt32(bb.position()) + bb.position(),
        bb
      );
    }

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param SignRequest= obj
     * @returns SignRequest
     */
    static getSizePrefixedRootAsSignRequest(
      bb: flatbuffers.ByteBuffer,
      obj?: SignRequest
    ): SignRequest {
      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
      return (obj || new SignRequest()).__init(
        bb.readInt32(bb.position()) + bb.position(),
        bb
      );
    }

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    message(): string | null;
    message(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
    message(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset
        ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
        : null;
    }

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    publicKey(): string | null;
    publicKey(
      optionalEncoding: flatbuffers.Encoding
    ): string | Uint8Array | null;
    publicKey(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 6);
      return offset
        ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
        : null;
    }

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    privateKey(): string | null;
    privateKey(
      optionalEncoding: flatbuffers.Encoding
    ): string | Uint8Array | null;
    privateKey(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 8);
      return offset
        ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
        : null;
    }

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    passphrase(): string | null;
    passphrase(
      optionalEncoding: flatbuffers.Encoding
    ): string | Uint8Array | null;
    passphrase(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 10);
      return offset
        ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
        : null;
    }

    /**
     * @param model.KeyOptions= obj
     * @returns model.KeyOptions|null
     */
    options(obj?: model.KeyOptions): model.KeyOptions | null {
      var offset = this.bb!.__offset(this.bb_pos, 12);
      return offset
        ? (obj || new model.KeyOptions()).__init(
            this.bb!.__indirect(this.bb_pos + offset),
            this.bb!
          )
        : null;
    }

    /**
     * @param flatbuffers.Builder builder
     */
    static startSignRequest(builder: flatbuffers.Builder) {
      builder.startObject(5);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset messageOffset
     */
    static addMessage(
      builder: flatbuffers.Builder,
      messageOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(0, messageOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset publicKeyOffset
     */
    static addPublicKey(
      builder: flatbuffers.Builder,
      publicKeyOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(1, publicKeyOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset privateKeyOffset
     */
    static addPrivateKey(
      builder: flatbuffers.Builder,
      privateKeyOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(2, privateKeyOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset passphraseOffset
     */
    static addPassphrase(
      builder: flatbuffers.Builder,
      passphraseOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(3, passphraseOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset optionsOffset
     */
    static addOptions(
      builder: flatbuffers.Builder,
      optionsOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(4, optionsOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endSignRequest(builder: flatbuffers.Builder): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    }

    static createSignRequest(
      builder: flatbuffers.Builder,
      messageOffset: flatbuffers.Offset,
      publicKeyOffset: flatbuffers.Offset,
      privateKeyOffset: flatbuffers.Offset,
      passphraseOffset: flatbuffers.Offset,
      optionsOffset: flatbuffers.Offset
    ): flatbuffers.Offset {
      SignRequest.startSignRequest(builder);
      SignRequest.addMessage(builder, messageOffset);
      SignRequest.addPublicKey(builder, publicKeyOffset);
      SignRequest.addPrivateKey(builder, privateKeyOffset);
      SignRequest.addPassphrase(builder, passphraseOffset);
      SignRequest.addOptions(builder, optionsOffset);
      return SignRequest.endSignRequest(builder);
    }
  }
}
/**
 * @constructor
 */
export namespace model {
  export class SignBytesRequest {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns SignBytesRequest
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): SignBytesRequest {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    }

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param SignBytesRequest= obj
     * @returns SignBytesRequest
     */
    static getRootAsSignBytesRequest(
      bb: flatbuffers.ByteBuffer,
      obj?: SignBytesRequest
    ): SignBytesRequest {
      return (obj || new SignBytesRequest()).__init(
        bb.readInt32(bb.position()) + bb.position(),
        bb
      );
    }

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param SignBytesRequest= obj
     * @returns SignBytesRequest
     */
    static getSizePrefixedRootAsSignBytesRequest(
      bb: flatbuffers.ByteBuffer,
      obj?: SignBytesRequest
    ): SignBytesRequest {
      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
      return (obj || new SignBytesRequest()).__init(
        bb.readInt32(bb.position()) + bb.position(),
        bb
      );
    }

    /**
     * @param number index
     * @returns number
     */
    message(index: number): number | null {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset
        ? this.bb!.readUint8(this.bb!.__vector(this.bb_pos + offset) + index)
        : 0;
    }

    /**
     * @returns number
     */
    messageLength(): number {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
    }

    /**
     * @returns Uint8Array
     */
    messageArray(): Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset
        ? new Uint8Array(
            this.bb!.bytes().buffer,
            this.bb!.bytes().byteOffset +
              this.bb!.__vector(this.bb_pos + offset),
            this.bb!.__vector_len(this.bb_pos + offset)
          )
        : null;
    }

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    publicKey(): string | null;
    publicKey(
      optionalEncoding: flatbuffers.Encoding
    ): string | Uint8Array | null;
    publicKey(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 6);
      return offset
        ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
        : null;
    }

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    privateKey(): string | null;
    privateKey(
      optionalEncoding: flatbuffers.Encoding
    ): string | Uint8Array | null;
    privateKey(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 8);
      return offset
        ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
        : null;
    }

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    passphrase(): string | null;
    passphrase(
      optionalEncoding: flatbuffers.Encoding
    ): string | Uint8Array | null;
    passphrase(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 10);
      return offset
        ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
        : null;
    }

    /**
     * @param model.KeyOptions= obj
     * @returns model.KeyOptions|null
     */
    options(obj?: model.KeyOptions): model.KeyOptions | null {
      var offset = this.bb!.__offset(this.bb_pos, 12);
      return offset
        ? (obj || new model.KeyOptions()).__init(
            this.bb!.__indirect(this.bb_pos + offset),
            this.bb!
          )
        : null;
    }

    /**
     * @param flatbuffers.Builder builder
     */
    static startSignBytesRequest(builder: flatbuffers.Builder) {
      builder.startObject(5);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset messageOffset
     */
    static addMessage(
      builder: flatbuffers.Builder,
      messageOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(0, messageOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param Array.<number> data
     * @returns flatbuffers.Offset
     */
    static createMessageVector(
      builder: flatbuffers.Builder,
      data: number[] | Uint8Array
    ): flatbuffers.Offset {
      builder.startVector(1, data.length, 1);
      for (var i = data.length - 1; i >= 0; i--) {
        builder.addInt8(data[i]);
      }
      return builder.endVector();
    }

    /**
     * @param flatbuffers.Builder builder
     * @param number numElems
     */
    static startMessageVector(builder: flatbuffers.Builder, numElems: number) {
      builder.startVector(1, numElems, 1);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset publicKeyOffset
     */
    static addPublicKey(
      builder: flatbuffers.Builder,
      publicKeyOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(1, publicKeyOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset privateKeyOffset
     */
    static addPrivateKey(
      builder: flatbuffers.Builder,
      privateKeyOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(2, privateKeyOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset passphraseOffset
     */
    static addPassphrase(
      builder: flatbuffers.Builder,
      passphraseOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(3, passphraseOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset optionsOffset
     */
    static addOptions(
      builder: flatbuffers.Builder,
      optionsOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(4, optionsOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endSignBytesRequest(
      builder: flatbuffers.Builder
    ): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    }

    static createSignBytesRequest(
      builder: flatbuffers.Builder,
      messageOffset: flatbuffers.Offset,
      publicKeyOffset: flatbuffers.Offset,
      privateKeyOffset: flatbuffers.Offset,
      passphraseOffset: flatbuffers.Offset,
      optionsOffset: flatbuffers.Offset
    ): flatbuffers.Offset {
      SignBytesRequest.startSignBytesRequest(builder);
      SignBytesRequest.addMessage(builder, messageOffset);
      SignBytesRequest.addPublicKey(builder, publicKeyOffset);
      SignBytesRequest.addPrivateKey(builder, privateKeyOffset);
      SignBytesRequest.addPassphrase(builder, passphraseOffset);
      SignBytesRequest.addOptions(builder, optionsOffset);
      return SignBytesRequest.endSignBytesRequest(builder);
    }
  }
}
/**
 * @constructor
 */
export namespace model {
  export class VerifyRequest {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns VerifyRequest
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): VerifyRequest {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    }

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param VerifyRequest= obj
     * @returns VerifyRequest
     */
    static getRootAsVerifyRequest(
      bb: flatbuffers.ByteBuffer,
      obj?: VerifyRequest
    ): VerifyRequest {
      return (obj || new VerifyRequest()).__init(
        bb.readInt32(bb.position()) + bb.position(),
        bb
      );
    }

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param VerifyRequest= obj
     * @returns VerifyRequest
     */
    static getSizePrefixedRootAsVerifyRequest(
      bb: flatbuffers.ByteBuffer,
      obj?: VerifyRequest
    ): VerifyRequest {
      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
      return (obj || new VerifyRequest()).__init(
        bb.readInt32(bb.position()) + bb.position(),
        bb
      );
    }

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    signature(): string | null;
    signature(
      optionalEncoding: flatbuffers.Encoding
    ): string | Uint8Array | null;
    signature(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset
        ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
        : null;
    }

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    message(): string | null;
    message(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
    message(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 6);
      return offset
        ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
        : null;
    }

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    publicKey(): string | null;
    publicKey(
      optionalEncoding: flatbuffers.Encoding
    ): string | Uint8Array | null;
    publicKey(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 8);
      return offset
        ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
        : null;
    }

    /**
     * @param flatbuffers.Builder builder
     */
    static startVerifyRequest(builder: flatbuffers.Builder) {
      builder.startObject(3);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset signatureOffset
     */
    static addSignature(
      builder: flatbuffers.Builder,
      signatureOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(0, signatureOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset messageOffset
     */
    static addMessage(
      builder: flatbuffers.Builder,
      messageOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(1, messageOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset publicKeyOffset
     */
    static addPublicKey(
      builder: flatbuffers.Builder,
      publicKeyOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(2, publicKeyOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endVerifyRequest(builder: flatbuffers.Builder): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    }

    static createVerifyRequest(
      builder: flatbuffers.Builder,
      signatureOffset: flatbuffers.Offset,
      messageOffset: flatbuffers.Offset,
      publicKeyOffset: flatbuffers.Offset
    ): flatbuffers.Offset {
      VerifyRequest.startVerifyRequest(builder);
      VerifyRequest.addSignature(builder, signatureOffset);
      VerifyRequest.addMessage(builder, messageOffset);
      VerifyRequest.addPublicKey(builder, publicKeyOffset);
      return VerifyRequest.endVerifyRequest(builder);
    }
  }
}
/**
 * @constructor
 */
export namespace model {
  export class VerifyBytesRequest {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns VerifyBytesRequest
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): VerifyBytesRequest {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    }

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param VerifyBytesRequest= obj
     * @returns VerifyBytesRequest
     */
    static getRootAsVerifyBytesRequest(
      bb: flatbuffers.ByteBuffer,
      obj?: VerifyBytesRequest
    ): VerifyBytesRequest {
      return (obj || new VerifyBytesRequest()).__init(
        bb.readInt32(bb.position()) + bb.position(),
        bb
      );
    }

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param VerifyBytesRequest= obj
     * @returns VerifyBytesRequest
     */
    static getSizePrefixedRootAsVerifyBytesRequest(
      bb: flatbuffers.ByteBuffer,
      obj?: VerifyBytesRequest
    ): VerifyBytesRequest {
      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
      return (obj || new VerifyBytesRequest()).__init(
        bb.readInt32(bb.position()) + bb.position(),
        bb
      );
    }

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    signature(): string | null;
    signature(
      optionalEncoding: flatbuffers.Encoding
    ): string | Uint8Array | null;
    signature(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset
        ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
        : null;
    }

    /**
     * @param number index
     * @returns number
     */
    message(index: number): number | null {
      var offset = this.bb!.__offset(this.bb_pos, 6);
      return offset
        ? this.bb!.readUint8(this.bb!.__vector(this.bb_pos + offset) + index)
        : 0;
    }

    /**
     * @returns number
     */
    messageLength(): number {
      var offset = this.bb!.__offset(this.bb_pos, 6);
      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
    }

    /**
     * @returns Uint8Array
     */
    messageArray(): Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 6);
      return offset
        ? new Uint8Array(
            this.bb!.bytes().buffer,
            this.bb!.bytes().byteOffset +
              this.bb!.__vector(this.bb_pos + offset),
            this.bb!.__vector_len(this.bb_pos + offset)
          )
        : null;
    }

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    publicKey(): string | null;
    publicKey(
      optionalEncoding: flatbuffers.Encoding
    ): string | Uint8Array | null;
    publicKey(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 8);
      return offset
        ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
        : null;
    }

    /**
     * @param flatbuffers.Builder builder
     */
    static startVerifyBytesRequest(builder: flatbuffers.Builder) {
      builder.startObject(3);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset signatureOffset
     */
    static addSignature(
      builder: flatbuffers.Builder,
      signatureOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(0, signatureOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset messageOffset
     */
    static addMessage(
      builder: flatbuffers.Builder,
      messageOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(1, messageOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param Array.<number> data
     * @returns flatbuffers.Offset
     */
    static createMessageVector(
      builder: flatbuffers.Builder,
      data: number[] | Uint8Array
    ): flatbuffers.Offset {
      builder.startVector(1, data.length, 1);
      for (var i = data.length - 1; i >= 0; i--) {
        builder.addInt8(data[i]);
      }
      return builder.endVector();
    }

    /**
     * @param flatbuffers.Builder builder
     * @param number numElems
     */
    static startMessageVector(builder: flatbuffers.Builder, numElems: number) {
      builder.startVector(1, numElems, 1);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset publicKeyOffset
     */
    static addPublicKey(
      builder: flatbuffers.Builder,
      publicKeyOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(2, publicKeyOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endVerifyBytesRequest(
      builder: flatbuffers.Builder
    ): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    }

    static createVerifyBytesRequest(
      builder: flatbuffers.Builder,
      signatureOffset: flatbuffers.Offset,
      messageOffset: flatbuffers.Offset,
      publicKeyOffset: flatbuffers.Offset
    ): flatbuffers.Offset {
      VerifyBytesRequest.startVerifyBytesRequest(builder);
      VerifyBytesRequest.addSignature(builder, signatureOffset);
      VerifyBytesRequest.addMessage(builder, messageOffset);
      VerifyBytesRequest.addPublicKey(builder, publicKeyOffset);
      return VerifyBytesRequest.endVerifyBytesRequest(builder);
    }
  }
}
/**
 * @constructor
 */
export namespace model {
  export class EncryptSymmetricRequest {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns EncryptSymmetricRequest
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): EncryptSymmetricRequest {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    }

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param EncryptSymmetricRequest= obj
     * @returns EncryptSymmetricRequest
     */
    static getRootAsEncryptSymmetricRequest(
      bb: flatbuffers.ByteBuffer,
      obj?: EncryptSymmetricRequest
    ): EncryptSymmetricRequest {
      return (obj || new EncryptSymmetricRequest()).__init(
        bb.readInt32(bb.position()) + bb.position(),
        bb
      );
    }

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param EncryptSymmetricRequest= obj
     * @returns EncryptSymmetricRequest
     */
    static getSizePrefixedRootAsEncryptSymmetricRequest(
      bb: flatbuffers.ByteBuffer,
      obj?: EncryptSymmetricRequest
    ): EncryptSymmetricRequest {
      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
      return (obj || new EncryptSymmetricRequest()).__init(
        bb.readInt32(bb.position()) + bb.position(),
        bb
      );
    }

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    message(): string | null;
    message(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
    message(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset
        ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
        : null;
    }

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    passphrase(): string | null;
    passphrase(
      optionalEncoding: flatbuffers.Encoding
    ): string | Uint8Array | null;
    passphrase(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 6);
      return offset
        ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
        : null;
    }

    /**
     * @param model.KeyOptions= obj
     * @returns model.KeyOptions|null
     */
    options(obj?: model.KeyOptions): model.KeyOptions | null {
      var offset = this.bb!.__offset(this.bb_pos, 8);
      return offset
        ? (obj || new model.KeyOptions()).__init(
            this.bb!.__indirect(this.bb_pos + offset),
            this.bb!
          )
        : null;
    }

    /**
     * @param model.FileHints= obj
     * @returns model.FileHints|null
     */
    fileHints(obj?: model.FileHints): model.FileHints | null {
      var offset = this.bb!.__offset(this.bb_pos, 10);
      return offset
        ? (obj || new model.FileHints()).__init(
            this.bb!.__indirect(this.bb_pos + offset),
            this.bb!
          )
        : null;
    }

    /**
     * @param flatbuffers.Builder builder
     */
    static startEncryptSymmetricRequest(builder: flatbuffers.Builder) {
      builder.startObject(4);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset messageOffset
     */
    static addMessage(
      builder: flatbuffers.Builder,
      messageOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(0, messageOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset passphraseOffset
     */
    static addPassphrase(
      builder: flatbuffers.Builder,
      passphraseOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(1, passphraseOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset optionsOffset
     */
    static addOptions(
      builder: flatbuffers.Builder,
      optionsOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(2, optionsOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset fileHintsOffset
     */
    static addFileHints(
      builder: flatbuffers.Builder,
      fileHintsOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(3, fileHintsOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endEncryptSymmetricRequest(
      builder: flatbuffers.Builder
    ): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    }

    static createEncryptSymmetricRequest(
      builder: flatbuffers.Builder,
      messageOffset: flatbuffers.Offset,
      passphraseOffset: flatbuffers.Offset,
      optionsOffset: flatbuffers.Offset,
      fileHintsOffset: flatbuffers.Offset
    ): flatbuffers.Offset {
      EncryptSymmetricRequest.startEncryptSymmetricRequest(builder);
      EncryptSymmetricRequest.addMessage(builder, messageOffset);
      EncryptSymmetricRequest.addPassphrase(builder, passphraseOffset);
      EncryptSymmetricRequest.addOptions(builder, optionsOffset);
      EncryptSymmetricRequest.addFileHints(builder, fileHintsOffset);
      return EncryptSymmetricRequest.endEncryptSymmetricRequest(builder);
    }
  }
}
/**
 * @constructor
 */
export namespace model {
  export class EncryptSymmetricBytesRequest {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns EncryptSymmetricBytesRequest
     */
    __init(
      i: number,
      bb: flatbuffers.ByteBuffer
    ): EncryptSymmetricBytesRequest {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    }

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param EncryptSymmetricBytesRequest= obj
     * @returns EncryptSymmetricBytesRequest
     */
    static getRootAsEncryptSymmetricBytesRequest(
      bb: flatbuffers.ByteBuffer,
      obj?: EncryptSymmetricBytesRequest
    ): EncryptSymmetricBytesRequest {
      return (obj || new EncryptSymmetricBytesRequest()).__init(
        bb.readInt32(bb.position()) + bb.position(),
        bb
      );
    }

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param EncryptSymmetricBytesRequest= obj
     * @returns EncryptSymmetricBytesRequest
     */
    static getSizePrefixedRootAsEncryptSymmetricBytesRequest(
      bb: flatbuffers.ByteBuffer,
      obj?: EncryptSymmetricBytesRequest
    ): EncryptSymmetricBytesRequest {
      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
      return (obj || new EncryptSymmetricBytesRequest()).__init(
        bb.readInt32(bb.position()) + bb.position(),
        bb
      );
    }

    /**
     * @param number index
     * @returns number
     */
    message(index: number): number | null {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset
        ? this.bb!.readUint8(this.bb!.__vector(this.bb_pos + offset) + index)
        : 0;
    }

    /**
     * @returns number
     */
    messageLength(): number {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
    }

    /**
     * @returns Uint8Array
     */
    messageArray(): Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset
        ? new Uint8Array(
            this.bb!.bytes().buffer,
            this.bb!.bytes().byteOffset +
              this.bb!.__vector(this.bb_pos + offset),
            this.bb!.__vector_len(this.bb_pos + offset)
          )
        : null;
    }

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    passphrase(): string | null;
    passphrase(
      optionalEncoding: flatbuffers.Encoding
    ): string | Uint8Array | null;
    passphrase(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 6);
      return offset
        ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
        : null;
    }

    /**
     * @param model.KeyOptions= obj
     * @returns model.KeyOptions|null
     */
    options(obj?: model.KeyOptions): model.KeyOptions | null {
      var offset = this.bb!.__offset(this.bb_pos, 8);
      return offset
        ? (obj || new model.KeyOptions()).__init(
            this.bb!.__indirect(this.bb_pos + offset),
            this.bb!
          )
        : null;
    }

    /**
     * @param model.FileHints= obj
     * @returns model.FileHints|null
     */
    fileHints(obj?: model.FileHints): model.FileHints | null {
      var offset = this.bb!.__offset(this.bb_pos, 10);
      return offset
        ? (obj || new model.FileHints()).__init(
            this.bb!.__indirect(this.bb_pos + offset),
            this.bb!
          )
        : null;
    }

    /**
     * @param flatbuffers.Builder builder
     */
    static startEncryptSymmetricBytesRequest(builder: flatbuffers.Builder) {
      builder.startObject(4);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset messageOffset
     */
    static addMessage(
      builder: flatbuffers.Builder,
      messageOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(0, messageOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param Array.<number> data
     * @returns flatbuffers.Offset
     */
    static createMessageVector(
      builder: flatbuffers.Builder,
      data: number[] | Uint8Array
    ): flatbuffers.Offset {
      builder.startVector(1, data.length, 1);
      for (var i = data.length - 1; i >= 0; i--) {
        builder.addInt8(data[i]);
      }
      return builder.endVector();
    }

    /**
     * @param flatbuffers.Builder builder
     * @param number numElems
     */
    static startMessageVector(builder: flatbuffers.Builder, numElems: number) {
      builder.startVector(1, numElems, 1);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset passphraseOffset
     */
    static addPassphrase(
      builder: flatbuffers.Builder,
      passphraseOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(1, passphraseOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset optionsOffset
     */
    static addOptions(
      builder: flatbuffers.Builder,
      optionsOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(2, optionsOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset fileHintsOffset
     */
    static addFileHints(
      builder: flatbuffers.Builder,
      fileHintsOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(3, fileHintsOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endEncryptSymmetricBytesRequest(
      builder: flatbuffers.Builder
    ): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    }

    static createEncryptSymmetricBytesRequest(
      builder: flatbuffers.Builder,
      messageOffset: flatbuffers.Offset,
      passphraseOffset: flatbuffers.Offset,
      optionsOffset: flatbuffers.Offset,
      fileHintsOffset: flatbuffers.Offset
    ): flatbuffers.Offset {
      EncryptSymmetricBytesRequest.startEncryptSymmetricBytesRequest(builder);
      EncryptSymmetricBytesRequest.addMessage(builder, messageOffset);
      EncryptSymmetricBytesRequest.addPassphrase(builder, passphraseOffset);
      EncryptSymmetricBytesRequest.addOptions(builder, optionsOffset);
      EncryptSymmetricBytesRequest.addFileHints(builder, fileHintsOffset);
      return EncryptSymmetricBytesRequest.endEncryptSymmetricBytesRequest(
        builder
      );
    }
  }
}
/**
 * @constructor
 */
export namespace model {
  export class DecryptSymmetricRequest {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns DecryptSymmetricRequest
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): DecryptSymmetricRequest {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    }

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param DecryptSymmetricRequest= obj
     * @returns DecryptSymmetricRequest
     */
    static getRootAsDecryptSymmetricRequest(
      bb: flatbuffers.ByteBuffer,
      obj?: DecryptSymmetricRequest
    ): DecryptSymmetricRequest {
      return (obj || new DecryptSymmetricRequest()).__init(
        bb.readInt32(bb.position()) + bb.position(),
        bb
      );
    }

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param DecryptSymmetricRequest= obj
     * @returns DecryptSymmetricRequest
     */
    static getSizePrefixedRootAsDecryptSymmetricRequest(
      bb: flatbuffers.ByteBuffer,
      obj?: DecryptSymmetricRequest
    ): DecryptSymmetricRequest {
      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
      return (obj || new DecryptSymmetricRequest()).__init(
        bb.readInt32(bb.position()) + bb.position(),
        bb
      );
    }

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    message(): string | null;
    message(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
    message(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset
        ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
        : null;
    }

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    passphrase(): string | null;
    passphrase(
      optionalEncoding: flatbuffers.Encoding
    ): string | Uint8Array | null;
    passphrase(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 6);
      return offset
        ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
        : null;
    }

    /**
     * @param model.KeyOptions= obj
     * @returns model.KeyOptions|null
     */
    options(obj?: model.KeyOptions): model.KeyOptions | null {
      var offset = this.bb!.__offset(this.bb_pos, 8);
      return offset
        ? (obj || new model.KeyOptions()).__init(
            this.bb!.__indirect(this.bb_pos + offset),
            this.bb!
          )
        : null;
    }

    /**
     * @param flatbuffers.Builder builder
     */
    static startDecryptSymmetricRequest(builder: flatbuffers.Builder) {
      builder.startObject(3);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset messageOffset
     */
    static addMessage(
      builder: flatbuffers.Builder,
      messageOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(0, messageOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset passphraseOffset
     */
    static addPassphrase(
      builder: flatbuffers.Builder,
      passphraseOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(1, passphraseOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset optionsOffset
     */
    static addOptions(
      builder: flatbuffers.Builder,
      optionsOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(2, optionsOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endDecryptSymmetricRequest(
      builder: flatbuffers.Builder
    ): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    }

    static createDecryptSymmetricRequest(
      builder: flatbuffers.Builder,
      messageOffset: flatbuffers.Offset,
      passphraseOffset: flatbuffers.Offset,
      optionsOffset: flatbuffers.Offset
    ): flatbuffers.Offset {
      DecryptSymmetricRequest.startDecryptSymmetricRequest(builder);
      DecryptSymmetricRequest.addMessage(builder, messageOffset);
      DecryptSymmetricRequest.addPassphrase(builder, passphraseOffset);
      DecryptSymmetricRequest.addOptions(builder, optionsOffset);
      return DecryptSymmetricRequest.endDecryptSymmetricRequest(builder);
    }
  }
}
/**
 * @constructor
 */
export namespace model {
  export class DecryptSymmetricBytesRequest {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns DecryptSymmetricBytesRequest
     */
    __init(
      i: number,
      bb: flatbuffers.ByteBuffer
    ): DecryptSymmetricBytesRequest {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    }

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param DecryptSymmetricBytesRequest= obj
     * @returns DecryptSymmetricBytesRequest
     */
    static getRootAsDecryptSymmetricBytesRequest(
      bb: flatbuffers.ByteBuffer,
      obj?: DecryptSymmetricBytesRequest
    ): DecryptSymmetricBytesRequest {
      return (obj || new DecryptSymmetricBytesRequest()).__init(
        bb.readInt32(bb.position()) + bb.position(),
        bb
      );
    }

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param DecryptSymmetricBytesRequest= obj
     * @returns DecryptSymmetricBytesRequest
     */
    static getSizePrefixedRootAsDecryptSymmetricBytesRequest(
      bb: flatbuffers.ByteBuffer,
      obj?: DecryptSymmetricBytesRequest
    ): DecryptSymmetricBytesRequest {
      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
      return (obj || new DecryptSymmetricBytesRequest()).__init(
        bb.readInt32(bb.position()) + bb.position(),
        bb
      );
    }

    /**
     * @param number index
     * @returns number
     */
    message(index: number): number | null {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset
        ? this.bb!.readUint8(this.bb!.__vector(this.bb_pos + offset) + index)
        : 0;
    }

    /**
     * @returns number
     */
    messageLength(): number {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
    }

    /**
     * @returns Uint8Array
     */
    messageArray(): Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset
        ? new Uint8Array(
            this.bb!.bytes().buffer,
            this.bb!.bytes().byteOffset +
              this.bb!.__vector(this.bb_pos + offset),
            this.bb!.__vector_len(this.bb_pos + offset)
          )
        : null;
    }

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    passphrase(): string | null;
    passphrase(
      optionalEncoding: flatbuffers.Encoding
    ): string | Uint8Array | null;
    passphrase(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 6);
      return offset
        ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
        : null;
    }

    /**
     * @param model.KeyOptions= obj
     * @returns model.KeyOptions|null
     */
    options(obj?: model.KeyOptions): model.KeyOptions | null {
      var offset = this.bb!.__offset(this.bb_pos, 8);
      return offset
        ? (obj || new model.KeyOptions()).__init(
            this.bb!.__indirect(this.bb_pos + offset),
            this.bb!
          )
        : null;
    }

    /**
     * @param flatbuffers.Builder builder
     */
    static startDecryptSymmetricBytesRequest(builder: flatbuffers.Builder) {
      builder.startObject(3);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset messageOffset
     */
    static addMessage(
      builder: flatbuffers.Builder,
      messageOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(0, messageOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param Array.<number> data
     * @returns flatbuffers.Offset
     */
    static createMessageVector(
      builder: flatbuffers.Builder,
      data: number[] | Uint8Array
    ): flatbuffers.Offset {
      builder.startVector(1, data.length, 1);
      for (var i = data.length - 1; i >= 0; i--) {
        builder.addInt8(data[i]);
      }
      return builder.endVector();
    }

    /**
     * @param flatbuffers.Builder builder
     * @param number numElems
     */
    static startMessageVector(builder: flatbuffers.Builder, numElems: number) {
      builder.startVector(1, numElems, 1);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset passphraseOffset
     */
    static addPassphrase(
      builder: flatbuffers.Builder,
      passphraseOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(1, passphraseOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset optionsOffset
     */
    static addOptions(
      builder: flatbuffers.Builder,
      optionsOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(2, optionsOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endDecryptSymmetricBytesRequest(
      builder: flatbuffers.Builder
    ): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    }

    static createDecryptSymmetricBytesRequest(
      builder: flatbuffers.Builder,
      messageOffset: flatbuffers.Offset,
      passphraseOffset: flatbuffers.Offset,
      optionsOffset: flatbuffers.Offset
    ): flatbuffers.Offset {
      DecryptSymmetricBytesRequest.startDecryptSymmetricBytesRequest(builder);
      DecryptSymmetricBytesRequest.addMessage(builder, messageOffset);
      DecryptSymmetricBytesRequest.addPassphrase(builder, passphraseOffset);
      DecryptSymmetricBytesRequest.addOptions(builder, optionsOffset);
      return DecryptSymmetricBytesRequest.endDecryptSymmetricBytesRequest(
        builder
      );
    }
  }
}
/**
 * @constructor
 */
export namespace model {
  export class GenerateRequest {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns GenerateRequest
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): GenerateRequest {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    }

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param GenerateRequest= obj
     * @returns GenerateRequest
     */
    static getRootAsGenerateRequest(
      bb: flatbuffers.ByteBuffer,
      obj?: GenerateRequest
    ): GenerateRequest {
      return (obj || new GenerateRequest()).__init(
        bb.readInt32(bb.position()) + bb.position(),
        bb
      );
    }

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param GenerateRequest= obj
     * @returns GenerateRequest
     */
    static getSizePrefixedRootAsGenerateRequest(
      bb: flatbuffers.ByteBuffer,
      obj?: GenerateRequest
    ): GenerateRequest {
      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
      return (obj || new GenerateRequest()).__init(
        bb.readInt32(bb.position()) + bb.position(),
        bb
      );
    }

    /**
     * @param model.Options= obj
     * @returns model.Options|null
     */
    options(obj?: model.Options): model.Options | null {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset
        ? (obj || new model.Options()).__init(
            this.bb!.__indirect(this.bb_pos + offset),
            this.bb!
          )
        : null;
    }

    /**
     * @param flatbuffers.Builder builder
     */
    static startGenerateRequest(builder: flatbuffers.Builder) {
      builder.startObject(1);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset optionsOffset
     */
    static addOptions(
      builder: flatbuffers.Builder,
      optionsOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(0, optionsOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endGenerateRequest(
      builder: flatbuffers.Builder
    ): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    }

    static createGenerateRequest(
      builder: flatbuffers.Builder,
      optionsOffset: flatbuffers.Offset
    ): flatbuffers.Offset {
      GenerateRequest.startGenerateRequest(builder);
      GenerateRequest.addOptions(builder, optionsOffset);
      return GenerateRequest.endGenerateRequest(builder);
    }
  }
}
/**
 * KeyOptions collects a number of parameters along with sensible defaults.
 *
 * @constructor
 */
export namespace model {
  export class KeyOptions {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns KeyOptions
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): KeyOptions {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    }

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param KeyOptions= obj
     * @returns KeyOptions
     */
    static getRootAsKeyOptions(
      bb: flatbuffers.ByteBuffer,
      obj?: KeyOptions
    ): KeyOptions {
      return (obj || new KeyOptions()).__init(
        bb.readInt32(bb.position()) + bb.position(),
        bb
      );
    }

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param KeyOptions= obj
     * @returns KeyOptions
     */
    static getSizePrefixedRootAsKeyOptions(
      bb: flatbuffers.ByteBuffer,
      obj?: KeyOptions
    ): KeyOptions {
      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
      return (obj || new KeyOptions()).__init(
        bb.readInt32(bb.position()) + bb.position(),
        bb
      );
    }

    /**
     * Hash is the default hash function to be used.
     * If zero, SHA-256 is used.
     *
     * @returns model.Hash
     */
    hash(): model.Hash {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset
        ? /**  */ this.bb!.readInt32(this.bb_pos + offset)
        : model.Hash.SHA256;
    }

    /**
     * @param model.Hash value
     * @returns boolean
     */
    mutate_hash(value: model.Hash): boolean {
      var offset = this.bb!.__offset(this.bb_pos, 4);

      if (offset === 0) {
        return false;
      }

      this.bb!.writeInt32(this.bb_pos + offset, value);
      return true;
    }

    /**
     * Cipher is the cipher to be used.
     * If zero, AES-128 is used.
     *
     * @returns model.Cipher
     */
    cipher(): model.Cipher {
      var offset = this.bb!.__offset(this.bb_pos, 6);
      return offset
        ? /**  */ this.bb!.readInt32(this.bb_pos + offset)
        : model.Cipher.AES128;
    }

    /**
     * @param model.Cipher value
     * @returns boolean
     */
    mutate_cipher(value: model.Cipher): boolean {
      var offset = this.bb!.__offset(this.bb_pos, 6);

      if (offset === 0) {
        return false;
      }

      this.bb!.writeInt32(this.bb_pos + offset, value);
      return true;
    }

    /**
     * Compression is the compression algorithm to be
     * applied to the plaintext before encryption. If zero, no
     * compression is done.
     *
     * @returns model.Compression
     */
    compression(): model.Compression {
      var offset = this.bb!.__offset(this.bb_pos, 8);
      return offset
        ? /**  */ this.bb!.readInt32(this.bb_pos + offset)
        : model.Compression.NONE;
    }

    /**
     * @param model.Compression value
     * @returns boolean
     */
    mutate_compression(value: model.Compression): boolean {
      var offset = this.bb!.__offset(this.bb_pos, 8);

      if (offset === 0) {
        return false;
      }

      this.bb!.writeInt32(this.bb_pos + offset, value);
      return true;
    }

    /**
     * CompressionLevel is the compression level to use. It must be set to
     * between -1 and 9, with -1 causing the compressor to use the
     * default compression level, 0 causing the compressor to use
     * no compression and 1 to 9 representing increasing (better,
     * slower) compression levels. If Level is less than -1 or
     * more then 9, a non-nil error will be returned during
     * encryption. See the constants above for convenient common
     * settings for Level.
     *
     * @returns number
     */
    compressionLevel(): number {
      var offset = this.bb!.__offset(this.bb_pos, 10);
      return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
    }

    /**
     * @param number value
     * @returns boolean
     */
    mutate_compressionLevel(value: number): boolean {
      var offset = this.bb!.__offset(this.bb_pos, 10);

      if (offset === 0) {
        return false;
      }

      this.bb!.writeInt32(this.bb_pos + offset, value);
      return true;
    }

    /**
     * RSABits is the number of bits in new RSA keys made with NewEntity.
     * If zero, then 2048 bit keys are created.
     *
     * @returns number
     */
    rsaBits(): number {
      var offset = this.bb!.__offset(this.bb_pos, 12);
      return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
    }

    /**
     * @param number value
     * @returns boolean
     */
    mutate_rsaBits(value: number): boolean {
      var offset = this.bb!.__offset(this.bb_pos, 12);

      if (offset === 0) {
        return false;
      }

      this.bb!.writeInt32(this.bb_pos + offset, value);
      return true;
    }

    /**
     * @param flatbuffers.Builder builder
     */
    static startKeyOptions(builder: flatbuffers.Builder) {
      builder.startObject(5);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param model.Hash hash
     */
    static addHash(builder: flatbuffers.Builder, hash: model.Hash) {
      builder.addFieldInt32(0, hash, model.Hash.SHA256);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param model.Cipher cipher
     */
    static addCipher(builder: flatbuffers.Builder, cipher: model.Cipher) {
      builder.addFieldInt32(1, cipher, model.Cipher.AES128);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param model.Compression compression
     */
    static addCompression(
      builder: flatbuffers.Builder,
      compression: model.Compression
    ) {
      builder.addFieldInt32(2, compression, model.Compression.NONE);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param number compressionLevel
     */
    static addCompressionLevel(
      builder: flatbuffers.Builder,
      compressionLevel: number
    ) {
      builder.addFieldInt32(3, compressionLevel, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param number rsaBits
     */
    static addRsaBits(builder: flatbuffers.Builder, rsaBits: number) {
      builder.addFieldInt32(4, rsaBits, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endKeyOptions(builder: flatbuffers.Builder): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    }

    static createKeyOptions(
      builder: flatbuffers.Builder,
      hash: model.Hash,
      cipher: model.Cipher,
      compression: model.Compression,
      compressionLevel: number,
      rsaBits: number
    ): flatbuffers.Offset {
      KeyOptions.startKeyOptions(builder);
      KeyOptions.addHash(builder, hash);
      KeyOptions.addCipher(builder, cipher);
      KeyOptions.addCompression(builder, compression);
      KeyOptions.addCompressionLevel(builder, compressionLevel);
      KeyOptions.addRsaBits(builder, rsaBits);
      return KeyOptions.endKeyOptions(builder);
    }
  }
}
/**
 * @constructor
 */
export namespace model {
  export class Options {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns Options
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): Options {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    }

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param Options= obj
     * @returns Options
     */
    static getRootAsOptions(
      bb: flatbuffers.ByteBuffer,
      obj?: Options
    ): Options {
      return (obj || new Options()).__init(
        bb.readInt32(bb.position()) + bb.position(),
        bb
      );
    }

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param Options= obj
     * @returns Options
     */
    static getSizePrefixedRootAsOptions(
      bb: flatbuffers.ByteBuffer,
      obj?: Options
    ): Options {
      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
      return (obj || new Options()).__init(
        bb.readInt32(bb.position()) + bb.position(),
        bb
      );
    }

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    name(): string | null;
    name(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
    name(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset
        ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
        : null;
    }

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    comment(): string | null;
    comment(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
    comment(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 6);
      return offset
        ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
        : null;
    }

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    email(): string | null;
    email(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
    email(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 8);
      return offset
        ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
        : null;
    }

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    passphrase(): string | null;
    passphrase(
      optionalEncoding: flatbuffers.Encoding
    ): string | Uint8Array | null;
    passphrase(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 10);
      return offset
        ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
        : null;
    }

    /**
     * @param model.KeyOptions= obj
     * @returns model.KeyOptions|null
     */
    keyOptions(obj?: model.KeyOptions): model.KeyOptions | null {
      var offset = this.bb!.__offset(this.bb_pos, 12);
      return offset
        ? (obj || new model.KeyOptions()).__init(
            this.bb!.__indirect(this.bb_pos + offset),
            this.bb!
          )
        : null;
    }

    /**
     * @param flatbuffers.Builder builder
     */
    static startOptions(builder: flatbuffers.Builder) {
      builder.startObject(5);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset nameOffset
     */
    static addName(
      builder: flatbuffers.Builder,
      nameOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(0, nameOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset commentOffset
     */
    static addComment(
      builder: flatbuffers.Builder,
      commentOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(1, commentOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset emailOffset
     */
    static addEmail(
      builder: flatbuffers.Builder,
      emailOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(2, emailOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset passphraseOffset
     */
    static addPassphrase(
      builder: flatbuffers.Builder,
      passphraseOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(3, passphraseOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset keyOptionsOffset
     */
    static addKeyOptions(
      builder: flatbuffers.Builder,
      keyOptionsOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(4, keyOptionsOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endOptions(builder: flatbuffers.Builder): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    }

    static createOptions(
      builder: flatbuffers.Builder,
      nameOffset: flatbuffers.Offset,
      commentOffset: flatbuffers.Offset,
      emailOffset: flatbuffers.Offset,
      passphraseOffset: flatbuffers.Offset,
      keyOptionsOffset: flatbuffers.Offset
    ): flatbuffers.Offset {
      Options.startOptions(builder);
      Options.addName(builder, nameOffset);
      Options.addComment(builder, commentOffset);
      Options.addEmail(builder, emailOffset);
      Options.addPassphrase(builder, passphraseOffset);
      Options.addKeyOptions(builder, keyOptionsOffset);
      return Options.endOptions(builder);
    }
  }
}
/**
 * @constructor
 */
export namespace model {
  export class FileHints {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns FileHints
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): FileHints {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    }

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param FileHints= obj
     * @returns FileHints
     */
    static getRootAsFileHints(
      bb: flatbuffers.ByteBuffer,
      obj?: FileHints
    ): FileHints {
      return (obj || new FileHints()).__init(
        bb.readInt32(bb.position()) + bb.position(),
        bb
      );
    }

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param FileHints= obj
     * @returns FileHints
     */
    static getSizePrefixedRootAsFileHints(
      bb: flatbuffers.ByteBuffer,
      obj?: FileHints
    ): FileHints {
      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
      return (obj || new FileHints()).__init(
        bb.readInt32(bb.position()) + bb.position(),
        bb
      );
    }

    /**
     * IsBinary can be set to hint that the contents are binary data.
     *
     * @returns boolean
     */
    isBinary(): boolean {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
    }

    /**
     * @param boolean value
     * @returns boolean
     */
    mutate_isBinary(value: boolean): boolean {
      var offset = this.bb!.__offset(this.bb_pos, 4);

      if (offset === 0) {
        return false;
      }

      this.bb!.writeInt8(this.bb_pos + offset, +value);
      return true;
    }

    /**
     * FileName hints at the name of the file that should be written. It's
     * truncated to 255 bytes if longer. It may be empty to suggest that the
     * file should not be written to disk. It may be equal to "_CONSOLE" to
     * suggest the data should not be written to disk.
     *
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    fileName(): string | null;
    fileName(
      optionalEncoding: flatbuffers.Encoding
    ): string | Uint8Array | null;
    fileName(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 6);
      return offset
        ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
        : null;
    }

    /**
     * ModTime format allowed: RFC3339, contains the modification time of the file, or the zero time if not applicable.
     *
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    modTime(): string | null;
    modTime(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
    modTime(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 8);
      return offset
        ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
        : null;
    }

    /**
     * @param flatbuffers.Builder builder
     */
    static startFileHints(builder: flatbuffers.Builder) {
      builder.startObject(3);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param boolean isBinary
     */
    static addIsBinary(builder: flatbuffers.Builder, isBinary: boolean) {
      builder.addFieldInt8(0, +isBinary, +false);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset fileNameOffset
     */
    static addFileName(
      builder: flatbuffers.Builder,
      fileNameOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(1, fileNameOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset modTimeOffset
     */
    static addModTime(
      builder: flatbuffers.Builder,
      modTimeOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(2, modTimeOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endFileHints(builder: flatbuffers.Builder): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    }

    static createFileHints(
      builder: flatbuffers.Builder,
      isBinary: boolean,
      fileNameOffset: flatbuffers.Offset,
      modTimeOffset: flatbuffers.Offset
    ): flatbuffers.Offset {
      FileHints.startFileHints(builder);
      FileHints.addIsBinary(builder, isBinary);
      FileHints.addFileName(builder, fileNameOffset);
      FileHints.addModTime(builder, modTimeOffset);
      return FileHints.endFileHints(builder);
    }
  }
}
/**
 * An Entity represents the components of an OpenPGP key: a primary public key
 * (which must be a signing key), one or more identities claimed by that key,
 * and zero or more subkeys, which may be encryption keys.
 *
 * @constructor
 */
export namespace model {
  export class Entity {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns Entity
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): Entity {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    }

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param Entity= obj
     * @returns Entity
     */
    static getRootAsEntity(bb: flatbuffers.ByteBuffer, obj?: Entity): Entity {
      return (obj || new Entity()).__init(
        bb.readInt32(bb.position()) + bb.position(),
        bb
      );
    }

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param Entity= obj
     * @returns Entity
     */
    static getSizePrefixedRootAsEntity(
      bb: flatbuffers.ByteBuffer,
      obj?: Entity
    ): Entity {
      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
      return (obj || new Entity()).__init(
        bb.readInt32(bb.position()) + bb.position(),
        bb
      );
    }

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    publicKey(): string | null;
    publicKey(
      optionalEncoding: flatbuffers.Encoding
    ): string | Uint8Array | null;
    publicKey(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset
        ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
        : null;
    }

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    privateKey(): string | null;
    privateKey(
      optionalEncoding: flatbuffers.Encoding
    ): string | Uint8Array | null;
    privateKey(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 6);
      return offset
        ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
        : null;
    }

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    passphrase(): string | null;
    passphrase(
      optionalEncoding: flatbuffers.Encoding
    ): string | Uint8Array | null;
    passphrase(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 8);
      return offset
        ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
        : null;
    }

    /**
     * @param flatbuffers.Builder builder
     */
    static startEntity(builder: flatbuffers.Builder) {
      builder.startObject(3);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset publicKeyOffset
     */
    static addPublicKey(
      builder: flatbuffers.Builder,
      publicKeyOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(0, publicKeyOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset privateKeyOffset
     */
    static addPrivateKey(
      builder: flatbuffers.Builder,
      privateKeyOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(1, privateKeyOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset passphraseOffset
     */
    static addPassphrase(
      builder: flatbuffers.Builder,
      passphraseOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(2, passphraseOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endEntity(builder: flatbuffers.Builder): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    }

    static createEntity(
      builder: flatbuffers.Builder,
      publicKeyOffset: flatbuffers.Offset,
      privateKeyOffset: flatbuffers.Offset,
      passphraseOffset: flatbuffers.Offset
    ): flatbuffers.Offset {
      Entity.startEntity(builder);
      Entity.addPublicKey(builder, publicKeyOffset);
      Entity.addPrivateKey(builder, privateKeyOffset);
      Entity.addPassphrase(builder, passphraseOffset);
      return Entity.endEntity(builder);
    }
  }
}
/**
 * @constructor
 */
export namespace model {
  export class StringResponse {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns StringResponse
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): StringResponse {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    }

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param StringResponse= obj
     * @returns StringResponse
     */
    static getRootAsStringResponse(
      bb: flatbuffers.ByteBuffer,
      obj?: StringResponse
    ): StringResponse {
      return (obj || new StringResponse()).__init(
        bb.readInt32(bb.position()) + bb.position(),
        bb
      );
    }

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param StringResponse= obj
     * @returns StringResponse
     */
    static getSizePrefixedRootAsStringResponse(
      bb: flatbuffers.ByteBuffer,
      obj?: StringResponse
    ): StringResponse {
      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
      return (obj || new StringResponse()).__init(
        bb.readInt32(bb.position()) + bb.position(),
        bb
      );
    }

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    output(): string | null;
    output(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
    output(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset
        ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
        : null;
    }

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    error(): string | null;
    error(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
    error(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 6);
      return offset
        ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
        : null;
    }

    /**
     * @param flatbuffers.Builder builder
     */
    static startStringResponse(builder: flatbuffers.Builder) {
      builder.startObject(2);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset outputOffset
     */
    static addOutput(
      builder: flatbuffers.Builder,
      outputOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(0, outputOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset errorOffset
     */
    static addError(
      builder: flatbuffers.Builder,
      errorOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(1, errorOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endStringResponse(builder: flatbuffers.Builder): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    }

    static createStringResponse(
      builder: flatbuffers.Builder,
      outputOffset: flatbuffers.Offset,
      errorOffset: flatbuffers.Offset
    ): flatbuffers.Offset {
      StringResponse.startStringResponse(builder);
      StringResponse.addOutput(builder, outputOffset);
      StringResponse.addError(builder, errorOffset);
      return StringResponse.endStringResponse(builder);
    }
  }
}
/**
 * @constructor
 */
export namespace model {
  export class BytesResponse {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns BytesResponse
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): BytesResponse {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    }

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param BytesResponse= obj
     * @returns BytesResponse
     */
    static getRootAsBytesResponse(
      bb: flatbuffers.ByteBuffer,
      obj?: BytesResponse
    ): BytesResponse {
      return (obj || new BytesResponse()).__init(
        bb.readInt32(bb.position()) + bb.position(),
        bb
      );
    }

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param BytesResponse= obj
     * @returns BytesResponse
     */
    static getSizePrefixedRootAsBytesResponse(
      bb: flatbuffers.ByteBuffer,
      obj?: BytesResponse
    ): BytesResponse {
      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
      return (obj || new BytesResponse()).__init(
        bb.readInt32(bb.position()) + bb.position(),
        bb
      );
    }

    /**
     * @param number index
     * @returns number
     */
    output(index: number): number | null {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset
        ? this.bb!.readUint8(this.bb!.__vector(this.bb_pos + offset) + index)
        : 0;
    }

    /**
     * @returns number
     */
    outputLength(): number {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
    }

    /**
     * @returns Uint8Array
     */
    outputArray(): Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset
        ? new Uint8Array(
            this.bb!.bytes().buffer,
            this.bb!.bytes().byteOffset +
              this.bb!.__vector(this.bb_pos + offset),
            this.bb!.__vector_len(this.bb_pos + offset)
          )
        : null;
    }

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    error(): string | null;
    error(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
    error(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 6);
      return offset
        ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
        : null;
    }

    /**
     * @param flatbuffers.Builder builder
     */
    static startBytesResponse(builder: flatbuffers.Builder) {
      builder.startObject(2);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset outputOffset
     */
    static addOutput(
      builder: flatbuffers.Builder,
      outputOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(0, outputOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param Array.<number> data
     * @returns flatbuffers.Offset
     */
    static createOutputVector(
      builder: flatbuffers.Builder,
      data: number[] | Uint8Array
    ): flatbuffers.Offset {
      builder.startVector(1, data.length, 1);
      for (var i = data.length - 1; i >= 0; i--) {
        builder.addInt8(data[i]);
      }
      return builder.endVector();
    }

    /**
     * @param flatbuffers.Builder builder
     * @param number numElems
     */
    static startOutputVector(builder: flatbuffers.Builder, numElems: number) {
      builder.startVector(1, numElems, 1);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset errorOffset
     */
    static addError(
      builder: flatbuffers.Builder,
      errorOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(1, errorOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endBytesResponse(builder: flatbuffers.Builder): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    }

    static createBytesResponse(
      builder: flatbuffers.Builder,
      outputOffset: flatbuffers.Offset,
      errorOffset: flatbuffers.Offset
    ): flatbuffers.Offset {
      BytesResponse.startBytesResponse(builder);
      BytesResponse.addOutput(builder, outputOffset);
      BytesResponse.addError(builder, errorOffset);
      return BytesResponse.endBytesResponse(builder);
    }
  }
}
/**
 * @constructor
 */
export namespace model {
  export class BoolResponse {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns BoolResponse
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): BoolResponse {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    }

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param BoolResponse= obj
     * @returns BoolResponse
     */
    static getRootAsBoolResponse(
      bb: flatbuffers.ByteBuffer,
      obj?: BoolResponse
    ): BoolResponse {
      return (obj || new BoolResponse()).__init(
        bb.readInt32(bb.position()) + bb.position(),
        bb
      );
    }

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param BoolResponse= obj
     * @returns BoolResponse
     */
    static getSizePrefixedRootAsBoolResponse(
      bb: flatbuffers.ByteBuffer,
      obj?: BoolResponse
    ): BoolResponse {
      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
      return (obj || new BoolResponse()).__init(
        bb.readInt32(bb.position()) + bb.position(),
        bb
      );
    }

    /**
     * @returns boolean
     */
    output(): boolean {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
    }

    /**
     * @param boolean value
     * @returns boolean
     */
    mutate_output(value: boolean): boolean {
      var offset = this.bb!.__offset(this.bb_pos, 4);

      if (offset === 0) {
        return false;
      }

      this.bb!.writeInt8(this.bb_pos + offset, +value);
      return true;
    }

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    error(): string | null;
    error(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
    error(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 6);
      return offset
        ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
        : null;
    }

    /**
     * @param flatbuffers.Builder builder
     */
    static startBoolResponse(builder: flatbuffers.Builder) {
      builder.startObject(2);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param boolean output
     */
    static addOutput(builder: flatbuffers.Builder, output: boolean) {
      builder.addFieldInt8(0, +output, +false);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset errorOffset
     */
    static addError(
      builder: flatbuffers.Builder,
      errorOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(1, errorOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endBoolResponse(builder: flatbuffers.Builder): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    }

    static createBoolResponse(
      builder: flatbuffers.Builder,
      output: boolean,
      errorOffset: flatbuffers.Offset
    ): flatbuffers.Offset {
      BoolResponse.startBoolResponse(builder);
      BoolResponse.addOutput(builder, output);
      BoolResponse.addError(builder, errorOffset);
      return BoolResponse.endBoolResponse(builder);
    }
  }
}
/**
 * @constructor
 */
export namespace model {
  export class KeyPairResponse {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns KeyPairResponse
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): KeyPairResponse {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    }

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param KeyPairResponse= obj
     * @returns KeyPairResponse
     */
    static getRootAsKeyPairResponse(
      bb: flatbuffers.ByteBuffer,
      obj?: KeyPairResponse
    ): KeyPairResponse {
      return (obj || new KeyPairResponse()).__init(
        bb.readInt32(bb.position()) + bb.position(),
        bb
      );
    }

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param KeyPairResponse= obj
     * @returns KeyPairResponse
     */
    static getSizePrefixedRootAsKeyPairResponse(
      bb: flatbuffers.ByteBuffer,
      obj?: KeyPairResponse
    ): KeyPairResponse {
      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
      return (obj || new KeyPairResponse()).__init(
        bb.readInt32(bb.position()) + bb.position(),
        bb
      );
    }

    /**
     * @param model.KeyPair= obj
     * @returns model.KeyPair|null
     */
    output(obj?: model.KeyPair): model.KeyPair | null {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset
        ? (obj || new model.KeyPair()).__init(
            this.bb!.__indirect(this.bb_pos + offset),
            this.bb!
          )
        : null;
    }

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    error(): string | null;
    error(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
    error(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 6);
      return offset
        ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
        : null;
    }

    /**
     * @param flatbuffers.Builder builder
     */
    static startKeyPairResponse(builder: flatbuffers.Builder) {
      builder.startObject(2);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset outputOffset
     */
    static addOutput(
      builder: flatbuffers.Builder,
      outputOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(0, outputOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset errorOffset
     */
    static addError(
      builder: flatbuffers.Builder,
      errorOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(1, errorOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endKeyPairResponse(
      builder: flatbuffers.Builder
    ): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    }

    static createKeyPairResponse(
      builder: flatbuffers.Builder,
      outputOffset: flatbuffers.Offset,
      errorOffset: flatbuffers.Offset
    ): flatbuffers.Offset {
      KeyPairResponse.startKeyPairResponse(builder);
      KeyPairResponse.addOutput(builder, outputOffset);
      KeyPairResponse.addError(builder, errorOffset);
      return KeyPairResponse.endKeyPairResponse(builder);
    }
  }
}
/**
 * @constructor
 */
export namespace model {
  export class KeyPair {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns KeyPair
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): KeyPair {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    }

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param KeyPair= obj
     * @returns KeyPair
     */
    static getRootAsKeyPair(
      bb: flatbuffers.ByteBuffer,
      obj?: KeyPair
    ): KeyPair {
      return (obj || new KeyPair()).__init(
        bb.readInt32(bb.position()) + bb.position(),
        bb
      );
    }

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param KeyPair= obj
     * @returns KeyPair
     */
    static getSizePrefixedRootAsKeyPair(
      bb: flatbuffers.ByteBuffer,
      obj?: KeyPair
    ): KeyPair {
      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
      return (obj || new KeyPair()).__init(
        bb.readInt32(bb.position()) + bb.position(),
        bb
      );
    }

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    publicKey(): string | null;
    publicKey(
      optionalEncoding: flatbuffers.Encoding
    ): string | Uint8Array | null;
    publicKey(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset
        ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
        : null;
    }

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    privateKey(): string | null;
    privateKey(
      optionalEncoding: flatbuffers.Encoding
    ): string | Uint8Array | null;
    privateKey(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 6);
      return offset
        ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
        : null;
    }

    /**
     * @param flatbuffers.Builder builder
     */
    static startKeyPair(builder: flatbuffers.Builder) {
      builder.startObject(2);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset publicKeyOffset
     */
    static addPublicKey(
      builder: flatbuffers.Builder,
      publicKeyOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(0, publicKeyOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset privateKeyOffset
     */
    static addPrivateKey(
      builder: flatbuffers.Builder,
      privateKeyOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(1, privateKeyOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endKeyPair(builder: flatbuffers.Builder): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    }

    static createKeyPair(
      builder: flatbuffers.Builder,
      publicKeyOffset: flatbuffers.Offset,
      privateKeyOffset: flatbuffers.Offset
    ): flatbuffers.Offset {
      KeyPair.startKeyPair(builder);
      KeyPair.addPublicKey(builder, publicKeyOffset);
      KeyPair.addPrivateKey(builder, privateKeyOffset);
      return KeyPair.endKeyPair(builder);
    }
  }
}
/**
 * @constructor
 */
export namespace model {
  export class PublicKeyMetadata {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns PublicKeyMetadata
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): PublicKeyMetadata {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    }

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param PublicKeyMetadata= obj
     * @returns PublicKeyMetadata
     */
    static getRootAsPublicKeyMetadata(
      bb: flatbuffers.ByteBuffer,
      obj?: PublicKeyMetadata
    ): PublicKeyMetadata {
      return (obj || new PublicKeyMetadata()).__init(
        bb.readInt32(bb.position()) + bb.position(),
        bb
      );
    }

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param PublicKeyMetadata= obj
     * @returns PublicKeyMetadata
     */
    static getSizePrefixedRootAsPublicKeyMetadata(
      bb: flatbuffers.ByteBuffer,
      obj?: PublicKeyMetadata
    ): PublicKeyMetadata {
      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
      return (obj || new PublicKeyMetadata()).__init(
        bb.readInt32(bb.position()) + bb.position(),
        bb
      );
    }

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    keyID(): string | null;
    keyID(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
    keyID(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset
        ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
        : null;
    }

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    keyIDShort(): string | null;
    keyIDShort(
      optionalEncoding: flatbuffers.Encoding
    ): string | Uint8Array | null;
    keyIDShort(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 6);
      return offset
        ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
        : null;
    }

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    creationTime(): string | null;
    creationTime(
      optionalEncoding: flatbuffers.Encoding
    ): string | Uint8Array | null;
    creationTime(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 8);
      return offset
        ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
        : null;
    }

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    fingerprint(): string | null;
    fingerprint(
      optionalEncoding: flatbuffers.Encoding
    ): string | Uint8Array | null;
    fingerprint(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 10);
      return offset
        ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
        : null;
    }

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    keyIDNumeric(): string | null;
    keyIDNumeric(
      optionalEncoding: flatbuffers.Encoding
    ): string | Uint8Array | null;
    keyIDNumeric(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 12);
      return offset
        ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
        : null;
    }

    /**
     * @returns boolean
     */
    isSubKey(): boolean {
      var offset = this.bb!.__offset(this.bb_pos, 14);
      return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
    }

    /**
     * @param boolean value
     * @returns boolean
     */
    mutate_isSubKey(value: boolean): boolean {
      var offset = this.bb!.__offset(this.bb_pos, 14);

      if (offset === 0) {
        return false;
      }

      this.bb!.writeInt8(this.bb_pos + offset, +value);
      return true;
    }

    /**
     * @param flatbuffers.Builder builder
     */
    static startPublicKeyMetadata(builder: flatbuffers.Builder) {
      builder.startObject(6);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset keyIDOffset
     */
    static addKeyID(
      builder: flatbuffers.Builder,
      keyIDOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(0, keyIDOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset keyIDShortOffset
     */
    static addKeyIDShort(
      builder: flatbuffers.Builder,
      keyIDShortOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(1, keyIDShortOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset creationTimeOffset
     */
    static addCreationTime(
      builder: flatbuffers.Builder,
      creationTimeOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(2, creationTimeOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset fingerprintOffset
     */
    static addFingerprint(
      builder: flatbuffers.Builder,
      fingerprintOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(3, fingerprintOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset keyIDNumericOffset
     */
    static addKeyIDNumeric(
      builder: flatbuffers.Builder,
      keyIDNumericOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(4, keyIDNumericOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param boolean isSubKey
     */
    static addIsSubKey(builder: flatbuffers.Builder, isSubKey: boolean) {
      builder.addFieldInt8(5, +isSubKey, +false);
    }

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endPublicKeyMetadata(
      builder: flatbuffers.Builder
    ): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    }

    static createPublicKeyMetadata(
      builder: flatbuffers.Builder,
      keyIDOffset: flatbuffers.Offset,
      keyIDShortOffset: flatbuffers.Offset,
      creationTimeOffset: flatbuffers.Offset,
      fingerprintOffset: flatbuffers.Offset,
      keyIDNumericOffset: flatbuffers.Offset,
      isSubKey: boolean
    ): flatbuffers.Offset {
      PublicKeyMetadata.startPublicKeyMetadata(builder);
      PublicKeyMetadata.addKeyID(builder, keyIDOffset);
      PublicKeyMetadata.addKeyIDShort(builder, keyIDShortOffset);
      PublicKeyMetadata.addCreationTime(builder, creationTimeOffset);
      PublicKeyMetadata.addFingerprint(builder, fingerprintOffset);
      PublicKeyMetadata.addKeyIDNumeric(builder, keyIDNumericOffset);
      PublicKeyMetadata.addIsSubKey(builder, isSubKey);
      return PublicKeyMetadata.endPublicKeyMetadata(builder);
    }
  }
}
/**
 * @constructor
 */
export namespace model {
  export class PrivateKeyMetadata {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns PrivateKeyMetadata
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): PrivateKeyMetadata {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    }

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param PrivateKeyMetadata= obj
     * @returns PrivateKeyMetadata
     */
    static getRootAsPrivateKeyMetadata(
      bb: flatbuffers.ByteBuffer,
      obj?: PrivateKeyMetadata
    ): PrivateKeyMetadata {
      return (obj || new PrivateKeyMetadata()).__init(
        bb.readInt32(bb.position()) + bb.position(),
        bb
      );
    }

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param PrivateKeyMetadata= obj
     * @returns PrivateKeyMetadata
     */
    static getSizePrefixedRootAsPrivateKeyMetadata(
      bb: flatbuffers.ByteBuffer,
      obj?: PrivateKeyMetadata
    ): PrivateKeyMetadata {
      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
      return (obj || new PrivateKeyMetadata()).__init(
        bb.readInt32(bb.position()) + bb.position(),
        bb
      );
    }

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    keyID(): string | null;
    keyID(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
    keyID(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset
        ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
        : null;
    }

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    keyIDShort(): string | null;
    keyIDShort(
      optionalEncoding: flatbuffers.Encoding
    ): string | Uint8Array | null;
    keyIDShort(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 6);
      return offset
        ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
        : null;
    }

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    creationTime(): string | null;
    creationTime(
      optionalEncoding: flatbuffers.Encoding
    ): string | Uint8Array | null;
    creationTime(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 8);
      return offset
        ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
        : null;
    }

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    fingerprint(): string | null;
    fingerprint(
      optionalEncoding: flatbuffers.Encoding
    ): string | Uint8Array | null;
    fingerprint(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 10);
      return offset
        ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
        : null;
    }

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    keyIDNumeric(): string | null;
    keyIDNumeric(
      optionalEncoding: flatbuffers.Encoding
    ): string | Uint8Array | null;
    keyIDNumeric(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 12);
      return offset
        ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
        : null;
    }

    /**
     * @returns boolean
     */
    isSubKey(): boolean {
      var offset = this.bb!.__offset(this.bb_pos, 14);
      return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
    }

    /**
     * @param boolean value
     * @returns boolean
     */
    mutate_isSubKey(value: boolean): boolean {
      var offset = this.bb!.__offset(this.bb_pos, 14);

      if (offset === 0) {
        return false;
      }

      this.bb!.writeInt8(this.bb_pos + offset, +value);
      return true;
    }

    /**
     * @returns boolean
     */
    encrypted(): boolean {
      var offset = this.bb!.__offset(this.bb_pos, 16);
      return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
    }

    /**
     * @param boolean value
     * @returns boolean
     */
    mutate_encrypted(value: boolean): boolean {
      var offset = this.bb!.__offset(this.bb_pos, 16);

      if (offset === 0) {
        return false;
      }

      this.bb!.writeInt8(this.bb_pos + offset, +value);
      return true;
    }

    /**
     * @param flatbuffers.Builder builder
     */
    static startPrivateKeyMetadata(builder: flatbuffers.Builder) {
      builder.startObject(7);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset keyIDOffset
     */
    static addKeyID(
      builder: flatbuffers.Builder,
      keyIDOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(0, keyIDOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset keyIDShortOffset
     */
    static addKeyIDShort(
      builder: flatbuffers.Builder,
      keyIDShortOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(1, keyIDShortOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset creationTimeOffset
     */
    static addCreationTime(
      builder: flatbuffers.Builder,
      creationTimeOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(2, creationTimeOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset fingerprintOffset
     */
    static addFingerprint(
      builder: flatbuffers.Builder,
      fingerprintOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(3, fingerprintOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset keyIDNumericOffset
     */
    static addKeyIDNumeric(
      builder: flatbuffers.Builder,
      keyIDNumericOffset: flatbuffers.Offset
    ) {
      builder.addFieldOffset(4, keyIDNumericOffset, 0);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param boolean isSubKey
     */
    static addIsSubKey(builder: flatbuffers.Builder, isSubKey: boolean) {
      builder.addFieldInt8(5, +isSubKey, +false);
    }

    /**
     * @param flatbuffers.Builder builder
     * @param boolean encrypted
     */
    static addEncrypted(builder: flatbuffers.Builder, encrypted: boolean) {
      builder.addFieldInt8(6, +encrypted, +false);
    }

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endPrivateKeyMetadata(
      builder: flatbuffers.Builder
    ): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    }

    static createPrivateKeyMetadata(
      builder: flatbuffers.Builder,
      keyIDOffset: flatbuffers.Offset,
      keyIDShortOffset: flatbuffers.Offset,
      creationTimeOffset: flatbuffers.Offset,
      fingerprintOffset: flatbuffers.Offset,
      keyIDNumericOffset: flatbuffers.Offset,
      isSubKey: boolean,
      encrypted: boolean
    ): flatbuffers.Offset {
      PrivateKeyMetadata.startPrivateKeyMetadata(builder);
      PrivateKeyMetadata.addKeyID(builder, keyIDOffset);
      PrivateKeyMetadata.addKeyIDShort(builder, keyIDShortOffset);
      PrivateKeyMetadata.addCreationTime(builder, creationTimeOffset);
      PrivateKeyMetadata.addFingerprint(builder, fingerprintOffset);
      PrivateKeyMetadata.addKeyIDNumeric(builder, keyIDNumericOffset);
      PrivateKeyMetadata.addIsSubKey(builder, isSubKey);
      PrivateKeyMetadata.addEncrypted(builder, encrypted);
      return PrivateKeyMetadata.endPrivateKeyMetadata(builder);
    }
  }
}
